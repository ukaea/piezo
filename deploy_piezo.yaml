apiVersion: apps/v1
kind: Deployment
metadata:
  name: piezo-web-app
  labels:
    run: piezo
spec:
  replicas: 1
  selector:
    matchLabels:
      run: piezo
  template: 
    metadata:
      labels:
        run: piezo
    spec:
      containers:
      - name: piezo
        image: host-172-16-113-64.nubes.stfc.ac.uk/piezo-resources/web_app:latest # Path to docker image on harbor registry
        imagePullPolicy: Always
        ports:
        - containerPort: 8888 # Port where the application is exposed on 
---
kind: Service
apiVersion: v1
metadata:
  name: piezo-app-service
  namespace: default
  labels:
    piezo-status: test
spec:
  selector:
    run: piezo
  ports:
  - name: web
    port: 8888 # Port where the application is exposed on in the container (to be picked up by ingress)
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
  name: piezo-ingress
spec:
  rules:
    - host: host-172-16-113-146.nubes.stfc.ac.uk # Node where ingress controller is run (kuberenetes master)
      http:
        paths:
          - backend:
              serviceName: piezo-app-service
              servicePort: web
            path: /piezo/
---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
  name: prometheus-ingress
spec:
  rules:
    - host: host-172-16-113-146.nubes.stfc.ac.uk  # Node where ingress controller is run (kuberenetes master)
      http:
        paths:
          - backend:
              serviceName: piezo-monitor-prometheus-o-prometheus
              servicePort: web
            path: /prometheus/
          - backend:
              serviceName: piezo-monitor-grafana
              servicePort: service
            path: /
