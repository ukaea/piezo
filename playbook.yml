---
# blank playbook
- hosts: all
  become_method: sudo
  become: true
  tasks:
    - name: Install basic dev packages
      yum:
        name: "{{ packages }}"
        state: present
      become: true
      vars:
        packages:
        - zip
        - unzip

    - name: Stop and disable firewalld.
      service:
        name: firewalld
        state: stopped
        enabled: False

    - name: Add docker repo
      shell: "yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo"
      become: true

    - name: install kubernetes repo
      command: sh /home/vagrant/code/install-kubernetes-repo.sh

    - name: install docker and kubernetes components
      yum:
        name: "{{ packages }}"
        state: present
      become: true
      vars:
        packages:
        - docker-ce-18.06.1.ce 
        - kubelet
        - kubeadm
        - kubectl
        - kubernetes-cni

    - name: start and enable docker
      service:
        name: docker
        state: started
        enabled: true
    
    - name: start and enable kubelet
      service:
        name: kubelet
        state: started
        enabled: true

    - name: Set iptables
      shell: "sysctl -w net.bridge.bridge-nf-call-iptables=1 && sysctl -w net.ipv4.ip_forward=1"
      become: true
  
    - name: Make iptables set permenantly 
      shell: echo "net.bridge.bridge-nf-call-iptables=1" > /etc/sysctl.d/k8s.conf
      become: true

    - name: Make iptables set permenantly 
      shell: echo "net.ipv4.ip_forward=1" > /etc/sysctl.d/k8s.conf
      become: true

    - name: implement ip tables as 1
      shell: "sysctl -p"
      become: true
    
    - name: turn swap off
      shell: "swapoff -a && sed -i '/ swap / s/^/#/' /etc/fstab"
      become: true

    - name: update hosts files
      command: "sh /home/vagrant/code/update-hosts-file.sh"

- hosts: master-k8s
  become_method: sudo
  tasks:
    - name: check if kubernetes is already launched 
      stat: 
        path: /etc/kubernetes/manifests/etcd.yaml
      register: stat_result

    - name: Initiate kubernetes
      shell: "kubeadm init --apiserver-advertise-address=172.28.128.10 --apiserver-cert-extra-sans=172.28.128.10  --node-name master-k8s"
      become: true
      when: stat_result.stat.exists == False 

    - name: Make .kube directory 
      file:
        path: /home/vagrant/.kube
        state: directory  

    
    - name: make kubectl executable by everyone
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/vagrant/.kube/config
        owner: "vagrant"
        group: "vagrant"
        remote_src: True
      become: true

    - name: Generate new kubeadm token if no token exists
      shell: kubeadm token create

    - name: Get kubeadm token
      shell: kubeadm token list | sed -n 2p | awk '{ print $1 };'
      register: kubeadm_token

    - name: save token
      copy: content="{{  kubeadm_token.stdout  }}" dest="/home/vagrant/code/join_token"
    
    - name: Apply weave 
      shell: kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"
      become: true
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf

    - name: install helm
      shell: "curl https://raw.githubusercontent.com/helm/helm/master/scripts/get > /home/vagrant/get_helm.sh"
      args:
        creates: /home/vagrant/get_helm.sh

    - name: get helm make executable
      file:
        dest: /home/vagrant/get_helm.sh
        owner: vagrant
        group: vagrant
      become: true

    - name: get helm make executable   
      shell: "chmod 700 /home/vagrant/get_helm.sh"

    - name: Run helm
      command: sh /home/vagrant/get_helm.sh


    - name: Initiate helm
      shell: "helm init"

    - name: create clusterrolebinding permissions
      shell: "kubectl create clusterrolebinding permissive-binding --clusterrole=cluster-admin --user=admin --user=kubelet --group=system:serviceaccounts"

    - name: Accept forward iptables
      shell: iptables -P FORWARD ACCEPT
      become: true


- hosts: 
    - node1-k8s
    - node2-k8s
  become_method: sudo
  become: true
  tasks:
    - name: Set kubeadm_token fact (nodes)
      shell: cat "/home/vagrant/code/join_token"
      register: kubeadm_token

    - name: Join Kubernetes cluster
      command: kubeadm join --discovery-token-unsafe-skip-ca-verification --token={{ kubeadm_token.stdout  }} 172.28.128.10:6443

- hosts:
    - master-k8s
    become_method: sudo
    roles:
      - minio
